{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","time","timer","this","setState","setInterval","date","Date","toLocaleTimeString","console","log","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","type","onClick","oldName","randomPartOfName","min","max","rand","Math","random","floor","randomInteger","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,EACNC,MAAO,MAHX,kEAMuB,IAAD,OAClBC,KAAKC,SAAS,CAACF,MAAOG,aAAY,WAChC,IAAMC,EAAO,IAAIC,KACjB,EAAKH,SAAS,CAACH,KAAMK,EAAKE,uBAE1BC,QAAQC,IAAIJ,EAAKE,wBAChB,SAZP,yCAeqBG,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAChCH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eAA+DT,KAAKU,MAAMD,SAjBhF,6CAsBIE,cAAcX,KAAKH,MAAME,SAtB7B,+BA0BI,OACI,yBAAKa,UAAU,OACb,2CACA,2CAEG,IACAZ,KAAKH,MAAMC,WAhCxB,GAA2Be,IAAMC,W,UC2DlBC,E,4MAlDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,oD,uDAGH,IAAD,OACP,OACE,oCACIjB,KAAKH,MAAMmB,eACT,kBAAC,EAAD,CAAOP,KAAMT,KAAKH,MAAMoB,YACxB,GAEJ,4BACEC,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEe,gBAAgB,MAHpC,cASA,4BACEE,KAAK,SACLC,QAAS,WACP,EAAKlB,SAAS,CAAEe,gBAAgB,MAHpC,cASA,4BACEE,KAAK,SACLC,QAAS,WACP,IAAMC,EAAU,EAAKvB,MAAMoB,UACrBI,EAzClB,SAAuBC,EAAKC,GAC1B,IAAMC,EAAOF,EAAMG,KAAKC,UAAYH,EAAM,EAAID,GAE9C,OAAOG,KAAKE,MAAMH,GAsCiBI,CAAc,EAAG,KAE1C,EAAK3B,SAAS,CAAEgB,UAAU,mDAAD,OAAaI,MACJ,IAA9B,EAAKxB,MAAMmB,gBAEbV,QAAQC,IAAR,qCAA0Ca,EAA1C,+DAAgEC,MATtE,wB,GA/BUR,IAAMC,WCNxBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.de6b190a.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: 0,\n    timer: null,\n  }\n\n  componentDidMount() {\n    this.setState({timer: setInterval(() => {\n      const date = new Date();\n      this.setState({time: date.toLocaleTimeString()})\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000)});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  render () {\n    return (\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <p>\n            Current time:\n            {' '}\n            {this.state.time}\n          </p>\n        </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction randomInteger(min, max) {\n  const rand = min + Math.random() * (max + 1 - min);\n\n  return Math.floor(rand);\n}\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 'ГОДИННИК',\n  };\n\n  render() {\n    return (\n      <>\n        { this.state.isClockVisible\n          ? <Clock name={this.state.clockName} />\n          : '' }\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            const oldName = this.state.clockName;\n            const randomPartOfName = randomInteger(1, 1000);\n\n            this.setState({ clockName: `ГОДИННИК${randomPartOfName}` });\n            if (this.state.isClockVisible === false) {\n              // eslint-disable-next-line\n              console.log(`The Clock was renamed from ${oldName} to ГОДИННИК${randomPartOfName}`);\n            }\n          }}\n        >\n          Set random name\n        </button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}